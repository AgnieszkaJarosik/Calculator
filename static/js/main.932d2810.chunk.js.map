{"version":3,"sources":["components/display/Display.js","components/displayers/Displayers.js","components/clear/Clear.js","components/operation/Operation.js","components/operations/Operations.js","components/number/Number.js","components/decimal/Decimal.js","components/numbers/Numbers.js","components/calculate/Calculate.js","components/calculator/keys.js","components/calculator/Calculator.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Display","props","id","toId","className","nameToClass","undefined","clicked","Displayers","operation","buffer","Clear","onClick","clickHandler","Operation","index","sign","Operations","operations","map","key","Number","value","Decimal","Numbers","numbers","number","decimalClickHandler","Calculate","numberKeys","operationKeys","a","b","Calculator","state","x","lastOperation","lastPressed","isDecimalClicked","handleNumberClick","bind","handleOperationClick","handleCalculateClick","handleClearClick","handleDecimalClick","parseFloat","this","setState","result","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.932d2810.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Display.css';\r\n\r\nfunction Display(props) {\r\n  return (\r\n    <div id={props.toId} className={props.nameToClass} >\r\n      {props.clicked!==undefined ? props.clicked : '0'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport Display from '../display/Display';\r\n\r\nimport './Displayers.css';\r\n\r\nfunction Displayers(props) {\r\n  return (\r\n    <div id=\"displayers\">\r\n      <Display clicked={props.operation} nameToClass=\"minorDisplayer\" toId=\"minorDisplay\" />\r\n      <Display clicked={props.buffer} nameToClass=\"mainDisplayer\" toId=\"display\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Displayers;","import React from 'react';\r\n\r\nimport './Clear.css';\r\n\r\nfunction Clear(props) {\r\n\r\n  return (\r\n    <div id=\"clear\" onClick={props.clickHandler} >\r\n     AC\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Clear;","import React from 'react';\r\n\r\nimport './Operation.css';\r\n\r\nfunction Operation(props) {\r\n  const handleClick = () => {\r\n    props.clickHandler(props.index);\r\n  }\r\n\r\n  return (\r\n    <div id={props.id} \r\n        className={props.id==='add' ? \"operation plus\" : \"operation\"}\r\n        onClick={handleClick}>\r\n      {props.sign}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Operation;","import React from 'react';\r\nimport Operation from '../operation/Operation';\r\n\r\nimport './Operations.css';\r\n\r\nfunction Operations(props) {\r\n  return (\r\n    <div className=\"operations\">\r\n      {props.operations.map( (operation, id) => {\r\n        if (operation.sign==='+') {\r\n          return <div className=\"plusContainer\">\r\n                  <Operation id={operation.id}\r\n                            sign={operation.sign}\r\n                            index={operation.index}\r\n                            key={id}\r\n                            clickHandler={props.clickHandler} />\r\n                  <div className=\"operation\"></div>\r\n                </div>\r\n        } else {\r\n          return <Operation id={operation.id}\r\n                            sign={operation.sign}\r\n                            index={operation.index}\r\n                            key={id}\r\n                            clickHandler={props.clickHandler} />\r\n        }\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Operations;","import React from 'react';\r\n\r\nimport './Number.css';\r\n\r\nfunction Number(props) {\r\n  const handleClick = () => {\r\n    props.clickHandler(props.value+\"\");\r\n  }\r\n\r\n  return (\r\n    <div  id={props.id}\r\n          className={props.id==='zero' ? \"zero number\" : \"number\"} \r\n          onClick={handleClick} >\r\n     {props.value}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Number;","import React from 'react';\r\n\r\nfunction Decimal(props) {\r\n\r\n  return (\r\n    <div id=\"decimal\" className=\"number\" onClick={props.clickHandler} >\r\n      .\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Decimal;","import React from 'react';\r\nimport Number from '../number/Number';\r\nimport Decimal from '../decimal/Decimal';\r\n\r\nimport './Numbers.css';\r\n\r\nfunction Numbers(props) {\r\n\r\n  return (\r\n    <div className=\"numbers\">\r\n      {props.numbers.map( (number, id) => {\r\n        if (id===0) {\r\n          return <div className=\"zeroContainer\">\r\n                    <Number id={number.id}\r\n                            value={number.value}\r\n                            key={id} \r\n                            clickHandler={props.clickHandler} />\r\n                    <Decimal clickHandler={props.decimalClickHandler} />\r\n                    <div className=\"break\"></div>\r\n            </div>\r\n          } else {\r\n            return <Number id={number.id}\r\n                            value={number.value}\r\n                            key={id}\r\n                            clickHandler={props.clickHandler} />\r\n          }\r\n        }  \r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Numbers;","import React from 'react';\r\n\r\nimport './Calculate.css';\r\n\r\nfunction Calculate(props) {\r\n\r\n  return (\r\n    <div id=\"equals\" onClick={props.clickHandler} >\r\n     =\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calculate;","export const numberKeys = [\r\n  {\r\n    id: 'zero',\r\n    value: 0\r\n  },\r\n  {\r\n    id: 'one',\r\n    value: 1\r\n  }, \r\n  {\r\n    id: 'two',\r\n    value: 2\r\n  },\r\n  {\r\n    id: 'three',\r\n    value: 3\r\n  }, \r\n  {\r\n    id: 'four',\r\n    value: 4\r\n  }, \r\n  {\r\n    id: 'five',\r\n    value: 5\r\n  }, \r\n  {\r\n    id: 'six',\r\n    value: 6\r\n  }, \r\n  {\r\n    id: 'seven',\r\n    value: 7\r\n  }, \r\n  {\r\n    id: 'eight',\r\n    value: 8\r\n  }, \r\n  {\r\n    id: 'nine',\r\n    value: 9\r\n  }\r\n];\r\n\r\nexport const operationKeys = [\r\n  {\r\n    id: \"add\",\r\n    sign: '+',\r\n    index: 0,\r\n    operation (a,b){\r\n      return a+b;\r\n    }\r\n  },\r\n  {\r\n    id: \"subtract\",\r\n    sign: '-',\r\n    index: 1,\r\n    operation (a,b) {\r\n      return a-b;\r\n    }\r\n  },\r\n  {\r\n    id: \"multiply\",\r\n    sign: '*',\r\n    index: 2,\r\n    operation (a,b) {\r\n      return a*b;\r\n    }\r\n  },\r\n  {\r\n    id: \"divide\",\r\n    sign: '/', \r\n    index: 3,\r\n    operation (a,b) {\r\n      return a/b;\r\n    }\r\n  }\r\n];\r\n","import React from 'react';\r\nimport Displayers from '../displayers/Displayers';\r\nimport Clear from '../clear/Clear';\r\nimport Operations from '../operations/Operations';\r\nimport Numbers from '../numbers/Numbers';\r\nimport Calculate from '../calculate/Calculate';\r\nimport {numberKeys, operationKeys} from './keys';\r\nimport './Calculator.css';\r\n\r\nclass Calculator extends React.Component  {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      numbers: numberKeys,\r\n      operations: operationKeys,\r\n      x: 0,\r\n      buffer: 0,\r\n      operation: '',\r\n      lastOperation: null,\r\n      lastPressed: null,\r\n      isDecimalClicked: false\r\n    }\r\n\r\n    this.handleNumberClick = this.handleNumberClick.bind(this);\r\n    this.handleOperationClick = this.handleOperationClick.bind(this);\r\n    this.handleCalculateClick = this.handleCalculateClick.bind(this);\r\n    this.handleClearClick = this.handleClearClick.bind(this);\r\n    this.handleDecimalClick = this.handleDecimalClick.bind(this);\r\n  }\r\n\r\n  handleNumberClick (value) {\r\n    if(parseFloat(this.state.buffer)===0 && value==='0') {\r\n      return;\r\n    } else {\r\n      if (this.state.buffer===0) {\r\n        this.setState({ buffer: value,\r\n                        lastPressed: 'number'\r\n                      })\r\n      } else if (this.state.lastPressed ==='equals') {\r\n        this.setState({ x: this.state.buffer,\r\n                        buffer: value,\r\n                        lastPressed: 'number'\r\n                      })\r\n      } else {\r\n        this.setState({ buffer: this.state.buffer + value,\r\n                        lastPressed: 'number'\r\n                      })\r\n      }\r\n    }\r\n  }\r\n\r\n  handleOperationClick (index) {\r\n    if (this.state.lastPressed==='operation' && this.state.operations[index].id!=='subtract' ){\r\n      this.setState({ lastOperation: this.state.operations[index].operation,\r\n                      buffer:''\r\n                   })\r\n    } else if (this.state.lastPressed==='operation' && this.state.operations[index].id==='subtract') {\r\n      this.setState({ buffer: '-' })\r\n    } else {\r\n      const result = this.state.lastOperation===null ? this.state.buffer : \r\n      this.state.lastOperation(parseFloat(this.state.x), parseFloat(this.state.buffer));\r\n    \r\n      this.setState({ lastOperation: this.state.operations[index].operation,\r\n                      x: result,\r\n                      operation: result + this.state.operations[index].sign + '',\r\n                      buffer: 0,\r\n                      lastPressed: 'operation',\r\n                      isDecimalClicked: false\r\n                    })\r\n    }\r\n  }\r\n\r\n  handleCalculateClick () {\r\n    const result = this.state.lastOperation===null ? this.state.buffer : \r\n    this.state.lastOperation(parseFloat(this.state.x), parseFloat(this.state.buffer));\r\n\r\n    this.setState({ x: 0,\r\n                    buffer: result,\r\n                    operation: null,\r\n                    lastOperation: null,\r\n                    lastPressed: 'equals',\r\n                    isDecimalClicked: false\r\n                  })\r\n  }\r\n\r\n  handleClearClick () {\r\n    this.setState({ x: 0,\r\n                    buffer: 0,\r\n                    operation: null,\r\n                    lastOperation: null,\r\n                    lastPressed: null,\r\n                    isDecimalClicked: false\r\n                  })\r\n  }\r\n\r\n  handleDecimalClick () {\r\n    if(this.state.isDecimalClicked===true) {\r\n      return;\r\n    } else {\r\n      this.setState({ buffer: this.state.buffer + '.',\r\n                      isDecimalClicked: true\r\n                    })\r\n    }    \r\n  }\r\n\r\n  render () {\r\n    return (\r\n        <div className=\"calculator\">\r\n          <Displayers operation={this.state.operation}\r\n                      buffer={this.state.buffer} />\r\n          <Clear clickHandler={this.handleClearClick} />\r\n          <Operations operations={this.state.operations} \r\n                      clickHandler={this.handleOperationClick} />\r\n          <Numbers numbers={this.state.numbers}\r\n                    clickHandler={this.handleNumberClick}\r\n                    decimalClickHandler={this.handleDecimalClick} />\r\n          <Calculate clickHandler={this.handleCalculateClick} />\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from 'react';\nimport Calculator from '../calculator/Calculator';\nimport './App.css';\n\nfunction App (props) {\n\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}